// Podemos indicarle a nuestra base de datos que inserte ó actualice un registro dadas unas condiciones
use("platzi_store")

db.iot.drop()

db.iot.insertMany([
  { _id: 1, sensor: "A001", date: "2022-01-01", readings: [1,2,3,4] },
  { _id: 2, sensor: "A001", date: "2022-01-02", readings: [1,2,3,4] },
  { _id: 3, sensor: "A002", date: "2022-01-01", readings: [1,2,3,4] },
  { _id: 4, sensor: "A002", date: "2022-01-02", readings: [1,2,3,4] },
])

// Esto nos sirve para buscar un documento con las caracteristicas especificadas
// Si EXISTE, me actualiza el registro actual según lo haya especificado
// Si NO EXISTE, me crea un nuevo registro con los parametros del query
db.iot.updateOne(
    {sensor:'A001',date:'2022-01-01'},
    {$push:{readings:5}},
    {upsert:true}
)

db.iot.find()